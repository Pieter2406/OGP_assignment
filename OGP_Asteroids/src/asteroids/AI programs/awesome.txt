double TURN_SPEED := 0.05;
double OFFSET := 10;
double pX; 
double pY;
double sX;
double sY;
entity s;
entity enemy;
bool foundPlayer := false;
//Find player
foreach (ship, s){
	if (s != self) then {
		enemy := s;
	}
}




while (true){
	// turn to player
	if (enemy != null) then {
	pX := getx enemy;
	pY := gety enemy;
	sX := getx self;
	sY := gety self;
	if(pY < sY) then{
		turn (getdir - TURN_SPEED);
	}else{
		turn (getdir + TURN_SPEED);
	}
	double dX := (pX - sX);
	double totalOffset := (getradius enemy) + OFFSET;
	double side := sqrt((dX*dX) + (totalOffset*totalOffset));
	double sinus := sin(getdir);
	//if((sinus < totalOffset/side) || (sinus > (-1) * (totalOffset/side))) then{
	//	fire;
	//}
	}
		
}

/*

	double dX := (pX - sX);
	double dY := (pY - sY);
	double eRadius := getradius enemy;
	double upperDY := (dY + eRadius + OFFSET);
	double lowerDY := (dY - eRadius - OFFSET);
	double dX2 := (dX * dX);
	double dY2u := (upperDY * upperDY);
	double dY2l := (lowerDY * lowerDY);
	double upperBound := (sqrt(dX2 + dY2u));
	double lowerBound := (sqrt(dX2 + dY2l));
	double distanceToEnemy := (dX/(sin(getdir))); 
	print upperBound;
	print lowerBound;
	print distanceToEnemy;
	if ((distanceToEnemy > lowerBound) && (distanceToEnemy < upperBound)) then {
		foundPlayer := true;
	}
	print foundPlayer;

*/